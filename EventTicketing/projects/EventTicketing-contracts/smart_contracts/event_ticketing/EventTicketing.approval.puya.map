{
  "version": 3,
  "sources": [
    "contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAqBK;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOG;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;AAAA;AAAA;AACA;AAA0B;AAA1B;AACA;AAA2B;AAA3B;AAXH;AAAA;AAiBU;;AAAc;;AAAd;AAAP;AAEO;AAAA;AAAA;AAAA;AAAA;AAAP;AAEmB;AACJ;AAAA;AAAA;AAAA;AAEL;AAAA;AAAA;AAAA;AAGE;;AACA;;;;;;;;;;AAFO;;;AADN;;;;;AAFC;;;;;;;;;;;;AAFK;;;;AAAA;;;AAAA;AAAA;;AAYnB;AAAA;;AAAA;AAnBH;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEU;AAAA;AAAA;AAAA;AAA0B;AAAA;AAAA;AAAA;AAA1B;;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;AAAP;AAAA;AAEO;;AAAA;;AAAkB;AAAA;;AAAA;AAAA;AAAlB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAGA;AAEmB;;AACF;;;;;;;AAHjB;;;;AAAA;;;AAAA;AAMoD;AAA1B;AAA1B;AAAA;AAAA;AAfH;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8"
    },
    "6": {
      "op": "bytecblock 0x6173615f6964 0x746f74616c 0x736f6c64 0x6e616d65 0x7072696365"
    },
    "37": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "39": {
      "op": "!",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "40": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "41": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "43": {
      "op": "bz main_create_NoOp@8",
      "stack_out": []
    },
    "46": {
      "op": "pushbytess 0x80b20100 0x653680b8 // method \"mint_tickets()uint64\", method \"buy_ticket(pay)void\"",
      "defined_out": [
        "Method(buy_ticket(pay)void)",
        "Method(mint_tickets()uint64)"
      ],
      "stack_out": [
        "Method(mint_tickets()uint64)",
        "Method(buy_ticket(pay)void)"
      ]
    },
    "58": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(buy_ticket(pay)void)",
        "Method(mint_tickets()uint64)",
        "tmp%4#0"
      ],
      "stack_out": [
        "Method(mint_tickets()uint64)",
        "Method(buy_ticket(pay)void)",
        "tmp%4#0"
      ]
    },
    "61": {
      "op": "match mint_tickets buy_ticket",
      "stack_out": []
    },
    "67": {
      "op": "err"
    },
    "68": {
      "block": "main_create_NoOp@8",
      "stack_in": [],
      "op": "pushbytes 0x0af0d14f // method \"create_application(string,uint64,uint64)void\"",
      "defined_out": [
        "Method(create_application(string,uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(create_application(string,uint64,uint64)void)"
      ]
    },
    "74": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_application(string,uint64,uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(create_application(string,uint64,uint64)void)",
        "tmp%5#0"
      ]
    },
    "77": {
      "op": "match create_application",
      "stack_out": []
    },
    "81": {
      "op": "err"
    },
    "82": {
      "subroutine": "smart_contracts.event_ticketing.contract.EventTicketing.create_application[routing]",
      "params": {},
      "block": "create_application",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "85": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "0"
      ]
    },
    "87": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "88": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "90": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "add%0#0"
      ]
    },
    "91": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "add%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "93": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "94": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "95": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "96": {
      "op": "extract 2 0",
      "defined_out": [
        "event_name#0"
      ],
      "stack_out": [
        "event_name#0"
      ]
    },
    "99": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "event_name#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "event_name#0",
        "tmp%2#0"
      ]
    },
    "102": {
      "op": "dup",
      "defined_out": [
        "event_name#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "event_name#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "103": {
      "op": "len",
      "defined_out": [
        "event_name#0",
        "len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "event_name#0",
        "tmp%2#0",
        "len%1#0"
      ]
    },
    "104": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "event_name#0",
        "len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "event_name#0",
        "tmp%2#0",
        "len%1#0",
        "8"
      ]
    },
    "105": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "event_name#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "event_name#0",
        "tmp%2#0",
        "eq%1#0"
      ]
    },
    "106": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "event_name#0",
        "tmp%2#0"
      ]
    },
    "107": {
      "op": "btoi",
      "defined_out": [
        "event_name#0",
        "ticket_price#0"
      ],
      "stack_out": [
        "event_name#0",
        "ticket_price#0"
      ]
    },
    "108": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0"
      ]
    },
    "111": {
      "op": "dup",
      "defined_out": [
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "112": {
      "op": "len",
      "defined_out": [
        "event_name#0",
        "len%2#0",
        "ticket_price#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0",
        "len%2#0"
      ]
    },
    "113": {
      "op": "intc_2 // 8",
      "stack_out": [
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0",
        "len%2#0",
        "8"
      ]
    },
    "114": {
      "op": "==",
      "defined_out": [
        "eq%2#0",
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0",
        "eq%2#0"
      ]
    },
    "115": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "event_name#0",
        "ticket_price#0",
        "tmp%4#0"
      ]
    },
    "116": {
      "op": "btoi",
      "defined_out": [
        "event_name#0",
        "ticket_price#0",
        "total_tickets#0"
      ],
      "stack_out": [
        "event_name#0",
        "ticket_price#0",
        "total_tickets#0"
      ]
    },
    "117": {
      "op": "bytec_3 // 0x6e616d65",
      "defined_out": [
        "0x6e616d65",
        "event_name#0",
        "ticket_price#0",
        "total_tickets#0"
      ],
      "stack_out": [
        "event_name#0",
        "ticket_price#0",
        "total_tickets#0",
        "0x6e616d65"
      ]
    },
    "118": {
      "op": "uncover 3",
      "stack_out": [
        "ticket_price#0",
        "total_tickets#0",
        "0x6e616d65",
        "event_name#0"
      ]
    },
    "120": {
      "op": "app_global_put",
      "stack_out": [
        "ticket_price#0",
        "total_tickets#0"
      ]
    },
    "121": {
      "op": "bytec 4 // 0x7072696365",
      "defined_out": [
        "0x7072696365",
        "ticket_price#0",
        "total_tickets#0"
      ],
      "stack_out": [
        "ticket_price#0",
        "total_tickets#0",
        "0x7072696365"
      ]
    },
    "123": {
      "op": "uncover 2",
      "stack_out": [
        "total_tickets#0",
        "0x7072696365",
        "ticket_price#0"
      ]
    },
    "125": {
      "op": "app_global_put",
      "stack_out": [
        "total_tickets#0"
      ]
    },
    "126": {
      "op": "bytec_1 // 0x746f74616c",
      "defined_out": [
        "0x746f74616c",
        "total_tickets#0"
      ],
      "stack_out": [
        "total_tickets#0",
        "0x746f74616c"
      ]
    },
    "127": {
      "op": "swap",
      "stack_out": [
        "0x746f74616c",
        "total_tickets#0"
      ]
    },
    "128": {
      "op": "app_global_put",
      "stack_out": []
    },
    "129": {
      "op": "bytec_2 // 0x736f6c64",
      "defined_out": [
        "0x736f6c64"
      ],
      "stack_out": [
        "0x736f6c64"
      ]
    },
    "130": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x736f6c64",
        "0"
      ]
    },
    "131": {
      "op": "app_global_put",
      "stack_out": []
    },
    "132": {
      "op": "bytec_0 // 0x6173615f6964",
      "defined_out": [
        "0x6173615f6964"
      ],
      "stack_out": [
        "0x6173615f6964"
      ]
    },
    "133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x6173615f6964",
        "0"
      ]
    },
    "134": {
      "op": "app_global_put",
      "stack_out": []
    },
    "135": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "136": {
      "op": "return",
      "stack_out": []
    },
    "137": {
      "subroutine": "smart_contracts.event_ticketing.contract.EventTicketing.mint_tickets[routing]",
      "params": {},
      "block": "mint_tickets",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "139": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "tmp%1#1"
      ]
    },
    "141": {
      "op": "==",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "142": {
      "error": "Sadece kontrat kurucusu bilet basabilir",
      "op": "assert // Sadece kontrat kurucusu bilet basabilir",
      "stack_out": []
    },
    "143": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "144": {
      "op": "bytec_0 // 0x6173615f6964",
      "defined_out": [
        "0",
        "0x6173615f6964"
      ],
      "stack_out": [
        "0",
        "0x6173615f6964"
      ]
    },
    "145": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "146": {
      "error": "check self.ticket_asa_id exists",
      "op": "assert // check self.ticket_asa_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "147": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "148": {
      "error": "Biletler zaten bas\u0131lm\u0131\u015f",
      "op": "assert // Biletler zaten bas\u0131lm\u0131\u015f",
      "stack_out": []
    },
    "149": {
      "op": "itxn_begin"
    },
    "150": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "151": {
      "op": "bytec_3 // 0x6e616d65",
      "defined_out": [
        "0",
        "0x6e616d65"
      ],
      "stack_out": [
        "0",
        "0x6e616d65"
      ]
    },
    "152": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "153": {
      "error": "check self.event_name exists",
      "op": "assert // check self.event_name exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "154": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "155": {
      "op": "bytec_1 // 0x746f74616c",
      "defined_out": [
        "0",
        "0x746f74616c",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0",
        "0x746f74616c"
      ]
    },
    "156": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "157": {
      "error": "check self.total_tickets exists",
      "op": "assert // check self.total_tickets exists",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "158": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "160": {
      "op": "dupn 3",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "162": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "164": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "166": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "168": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "170": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "171": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "173": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "174": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "176": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "178": {
      "op": "pushbytes \"TICKET\"",
      "defined_out": [
        "\"TICKET\"",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "\"TICKET\""
      ]
    },
    "186": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "188": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "190": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "192": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "194": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "195": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "197": {
      "op": "itxn_submit"
    },
    "198": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "created_asset_id#0"
      ],
      "stack_out": [
        "created_asset_id#0"
      ]
    },
    "200": {
      "op": "bytec_0 // 0x6173615f6964",
      "stack_out": [
        "created_asset_id#0",
        "0x6173615f6964"
      ]
    },
    "201": {
      "op": "dig 1",
      "defined_out": [
        "0x6173615f6964",
        "created_asset_id#0",
        "created_asset_id#0 (copy)"
      ],
      "stack_out": [
        "created_asset_id#0",
        "0x6173615f6964",
        "created_asset_id#0 (copy)"
      ]
    },
    "203": {
      "op": "app_global_put",
      "stack_out": [
        "created_asset_id#0"
      ]
    },
    "204": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "205": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "211": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "212": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "213": {
      "op": "log",
      "stack_out": []
    },
    "214": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "215": {
      "op": "return",
      "stack_out": []
    },
    "216": {
      "subroutine": "smart_contracts.event_ticketing.contract.EventTicketing.buy_ticket[routing]",
      "params": {},
      "block": "buy_ticket",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "218": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "219": {
      "op": "-",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0"
      ]
    },
    "220": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "221": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "223": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "224": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "225": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0"
      ]
    },
    "226": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0"
      ]
    },
    "227": {
      "op": "bytec_2 // 0x736f6c64",
      "defined_out": [
        "0",
        "0x736f6c64",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "0",
        "0x736f6c64"
      ]
    },
    "228": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "229": {
      "error": "check self.tickets_sold exists",
      "op": "assert // check self.tickets_sold exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "230": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "231": {
      "op": "bytec_1 // 0x746f74616c",
      "defined_out": [
        "0",
        "0x746f74616c",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "0",
        "0x746f74616c"
      ]
    },
    "232": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "233": {
      "error": "check self.total_tickets exists",
      "op": "assert // check self.total_tickets exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "234": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "maybe_value%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "236": {
      "op": ">",
      "defined_out": [
        "maybe_value%0#0",
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "tmp%0#1"
      ]
    },
    "237": {
      "error": "Biletler t\u00fckendi",
      "op": "assert // Biletler t\u00fckendi",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0"
      ]
    },
    "238": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "239": {
      "op": "bytec_0 // 0x6173615f6964",
      "defined_out": [
        "0",
        "0x6173615f6964",
        "maybe_value%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "0",
        "0x6173615f6964"
      ]
    },
    "240": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "241": {
      "error": "check self.ticket_asa_id exists",
      "op": "assert // check self.ticket_asa_id exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0"
      ]
    },
    "242": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "243": {
      "error": "Bilet sat\u0131\u015f\u0131 hen\u00fcz ba\u015flamad\u0131",
      "op": "assert // Bilet sat\u0131\u015f\u0131 hen\u00fcz ba\u015flamad\u0131",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0"
      ]
    },
    "244": {
      "op": "dig 2",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "payment#0 (copy)"
      ]
    },
    "246": {
      "op": "gtxns Amount",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "payment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ]
    },
    "248": {
      "op": "intc_0 // 0",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%2#0",
        "0"
      ]
    },
    "249": {
      "op": "bytec 4 // 0x7072696365",
      "defined_out": [
        "0",
        "0x7072696365",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "payment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%2#0",
        "0",
        "0x7072696365"
      ]
    },
    "251": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "payment#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "252": {
      "error": "check self.ticket_price exists",
      "op": "assert // check self.ticket_price exists",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%2#0",
        "maybe_value%3#0"
      ]
    },
    "253": {
      "op": "==",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "payment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%3#0"
      ]
    },
    "254": {
      "error": "\u00d6deme miktar\u0131 bilet fiyat\u0131yla e\u015fle\u015fmiyor",
      "op": "assert // \u00d6deme miktar\u0131 bilet fiyat\u0131yla e\u015fle\u015fmiyor",
      "stack_out": [
        "payment#0",
        "maybe_value%0#0",
        "maybe_value%2#0"
      ]
    },
    "255": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "payment#0"
      ]
    },
    "257": {
      "op": "gtxns Receiver",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%4#0"
      ]
    },
    "259": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "261": {
      "op": "==",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "tmp%6#0"
      ]
    },
    "262": {
      "error": "\u00d6deme bu kontrata yap\u0131lmal\u0131",
      "op": "assert // \u00d6deme bu kontrata yap\u0131lmal\u0131",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0"
      ]
    },
    "263": {
      "op": "itxn_begin"
    },
    "264": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "266": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "267": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "269": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%2#0"
      ]
    },
    "271": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "273": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "axfer"
      ]
    },
    "275": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "277": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "278": {
      "op": "itxn_field Fee",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "280": {
      "op": "itxn_submit"
    },
    "281": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "282": {
      "op": "+",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "283": {
      "op": "bytec_2 // 0x736f6c64",
      "stack_out": [
        "tmp%7#0",
        "0x736f6c64"
      ]
    },
    "284": {
      "op": "swap",
      "stack_out": [
        "0x736f6c64",
        "tmp%7#0"
      ]
    },
    "285": {
      "op": "app_global_put",
      "stack_out": []
    },
    "286": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "287": {
      "op": "return",
      "stack_out": []
    }
  }
}